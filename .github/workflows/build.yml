name: Build

on:
  push:
    branches:
      - 'main'

jobs:
  kernel:
    runs-on: ubuntu-latest
    continue-on-error: true
    name: Build
    strategy:
      matrix:
        project:
          - preinstalled-desktop
          - preinstalled-server
        suite:
          - bookworm
          - trixie
    steps:
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get install qemu-user-static debootstrap qemu-utils qemu-efi-aarch64 qemu-system-arm xz-utils -y
          wget http://ftp.us.debian.org/debian/pool/main/d/debootstrap/debootstrap_1.0.134_all.deb
          sudo docker run --privileged --rm tonistiigi/binfmt --install all

      - name: create installation directory
        run: sudo mkdir debian

      - name: debootstrap stage 1
        shell: bash
        run: |
          sudo debootstrap ${{ matrix.suite == 'bookworm' && 'bookworm' || matrix.suite == 'trixie' && 'trixie' }} --arch=arm64 --foreign debian http://deb.debian.org/debian/ /usr/share/debootstrap/scripts/${{ matrix.suite == 'bookworm' && 'bookworm' || matrix.suite == 'trixie' && 'trixie' }}
      - name: create resolv.conf
        run: echo "nameserver 8.8.8.8" | sudo tee debian/etc/resolv.conf

      - name: mount system directories
        run: |
          sudo mount --make-rslave --rbind /proc debian/proc
          sudo mount --make-rslave --rbind /sys debian/sys
          sudo mount --make-rslave --rbind /dev debian/dev
          sudo mount --make-rslave --rbind /run debian/run

      - name: copy qemu
        run: sudo cp "$(which qemu-aarch64-static)" debian/usr/bin

      - name: debootstrap stage 2
        run: sudo chroot debian /debootstrap/debootstrap --second-stage

      - name: create stage 3 script
        run: |
          sudo cat <<EOF > debian/stage3.sh
          #!/bin/bash
          cat <<EOT > /etc/apt/sources.list
          deb http://deb.debian.org/debian/ bullseye main contrib non-free
          deb-src http://deb.debian.org/debian/ bullseye main contrib non-free
          deb http://deb.debian.org/debian/ bullseye-updates main contrib non-free
          deb-src http://deb.debian.org/debian/ bullseye-updates main contrib non-free
          deb http://security.debian.org/debian-security bullseye-security main contrib non-free
          deb-src http://security.debian.org/debian-security bullseye-security main contrib non-free
          deb http://deb.debian.org/debian/ bullseye-backports main contrib non-free
          deb-src http://deb.debian.org/debian/ bullseye-backports main contrib non-free
          EOT
          apt-get update
          apt-get install locales dialog tzdata -y
          echo "Etc/GMT" > /etc/timezone
          sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
          echo 'LANG="en_US.UTF-8"'>/etc/default/locale
          dpkg-reconfigure --frontend=noninteractive locales && \
          update-locale LANG=en_US.UTF-8
          ENV LANG en_US.UTF-8
          ENV LANGUAGE en_US.UTF-8
          ENV LC_ALL en_US.UTF-8
          useradd -m -s /bin/bash debian
          usermod -aG sudo debian
          echo 'debian:debian'|chpasswd
          apt-get install vim openssh-server ntpdate sudo ifupdown net-tools udev iputils-ping wget dosfstools unzip binutils libatomic1 -y
          cat <<EOT > /etc/network/interfaces
          allow-hotplug eth0
          iface eth0 inet dhcp
          EOT
          EOF
          sudo chmod 755 debian/stage3.sh
          
      - name: run stage 3 script
        run: sudo chroot debian ./stage3.sh

      - name: remove stage 3 script
        run: rm debian/stage3.sh

      - name: unmount system directories
        run: |
          sudo umount debian/proc
          sudo umount debian/sys
          sudo umount debian/dev
          sudo umount debian/run

      - name: tarball installation directory
        run: |
          cd debian
          sudo tar cvf ../debian-${{ matrix.suite == 'bookworm' && '12' || matrix.suite == 'trixie' && '13' }}-${{ matrix.project }}-arm64-rootfs.tar .
          cd ..

      - name: compress installation tarball
        run: |
          sudo xz -9 debian-${{ matrix.suite == 'bookworm' && '12' || matrix.suite == 'trixie' && '13' }}-${{ matrix.project }}-arm64-rootfs.tar
          sudo chmod 777 *.xz
          
      - name: Upload
        uses: actions/upload-artifact@v4.3.1
        with:
          name: debian-${{ matrix.suite == 'bookworm' && '12' || matrix.suite == 'trixie' && '13' }}-${{ matrix.project }}-arm64-rootfs
          path: ./build/debian-${{ matrix.suite == 'bookworm' && '12' || matrix.suite == 'trixie' && '13' }}-${{ matrix.project }}-arm64.rootfs.tar.xz
          if-no-files-found: error
