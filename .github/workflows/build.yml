name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

jobs:
  cache:
    runs-on: ubuntu-latest
    name: Build OS Cache
    steps:        
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: scripts/install-dependencies.sh

      - name: debootstrap
        shell: bash
        run: scripts/debootstrap.sh $(pwd) ${{ matrix.suite == 'bookworm' && 'bookworm' || matrix.suite == 'trixie' && 'trixie' }}

      - name: setup chroot
        run: scripts/setup-chroot.sh $(pwd)

      - name: debootstrap stage 2
        run: scripts/complete-debootstrap.sh $(pwd)

      - name: cleanup script
        run: scripts/cleanup.sh $(pwd)

      - name: tarball installation directory
        run: |
          sudo tar -p -c --sort=name --xattrs os.tar debian

      - uses: actions/cache@v4
        with:
          path: ./os.tar
          key: os-cache
      
  kernel:
    runs-on: ubuntu-latest
    continue-on-error: true
    name: Build
    strategy:
      matrix:
        project:
          - preinstalled-desktop
          - preinstalled-server
        suite:
          - bookworm
          - trixie
        desktop:
          - gnome
          - gnome-flashback
          - kde
          - xfce
          - lxde
          - mate
          - cinnamon
          - lxqt
          - none
    steps:
      - name: early exit (server workflow)
        run: exit 1
        if: matrix.project == 'preinstalled-server' && matrix.desktop != 'none'

      - name: early exit (desktop workflow)
        run: exit 1
        if: matrix.project == 'preinstalled-desktop' && matrix.desktop == 'none'

      - name: prepare filename (desktop)
        run: |
          echo "filename=debian-${{ matrix.suite == 'bookworm' && '12' || matrix.suite == 'trixie' && '13' }}-${{ matrix.desktop }}-${{ matrix.project }}-arm64-rootfs">>$GITHUB_ENV
        if: matrix.project == 'preinstalled-desktop'
        
      - name: prepare filename (server)
        run: |
          echo "filename=debian-${{ matrix.suite == 'bookworm' && '12' || matrix.suite == 'trixie' && '13' }}-${{ matrix.project }}-arm64-rootfs">>$GITHUB_ENV
        if: matrix.project == 'preinstalled-server'
        
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: scripts/install-dependencies.sh

      - name: Restore OS Cache
        uses: actions/cache/restore@v4
        with:
          path: ./os.tar
          key: os-cache

      - name: Extract OS Cache
        shell: bash
        run: tar xf os.tar
        if: steps.cache.outputs.cache-hit == 'true'

      - name: debootstrap
        shell: bash
        run: scripts/debootstrap.sh $(pwd) ${{ matrix.suite == 'bookworm' && 'bookworm' || matrix.suite == 'trixie' && 'trixie' }}
        if: steps.cache.outputs.cache-hit != 'true'

      - name: setup chroot
        run: scripts/setup-chroot.sh $(pwd)

      - name: debootstrap stage 2
        run: scripts/complete-debootstrap.sh $(pwd)
        if: steps.cache.outputs.cache-hit != 'true'

      - name: tweak os
        run: |
          sudo cp scripts/os-tweaks.sh debian
          sudo chroot debian ./os-tweaks.sh ${{ matrix.project }}
          sudo rm debian/os-tweaks.sh

      - name: post debootstrap setup
        run: |
          sudo cp scripts/post-debootstrap.sh debian
          sudo chroot debian ./post-debootstrap.sh ${{ matrix.suite }}
          sudo rm debian/post-debootstrap.sh

      - name: install desktop environment
        run: |
          sudo cp scripts/install-de.sh debian
          sudo chroot debian ./install-de.sh ${{ matrix.desktop }}
          sudo rm debian/install-de.sh
        if: matrix.project == 'preinstalled-desktop'

      - name: switch to graphical boot
        run: |
          sudo cp scripts/switch-target.sh debian
          sudo chroot debian ./switch-target.sh graphical
          sudo rm debian/switch-target.sh
        if:  matrix.project == 'preinstalled-desktop'   
         
      - name: cleanup script
        run: scripts/cleanup.sh $(pwd)

      - name: tarball installation directory
        run: |
          cd debian
          sudo tar -p -c --sort=name --xattrs ../${{ env.filename }}.tar .
          cd ..

      - name: compress installation tarball
        run: |
          sudo xz -9 -T0 ${{ env.filename }}.tar
          sudo chmod 777 *.xz
          
      - name: Upload
        uses: actions/upload-artifact@v4.3.1
        with:
          name: '${{ env.filename }}'
          path: ./${{ env.filename }}.tar.xz
          if-no-files-found: error
          overwrite: true
          compression-level: 9
